---
// HeroSlider.astro
interface Slide {
  image: string;
  text: string;
}

export interface Props {
  slides: Slide[];
}

const { slides } = Astro.props;
---

<div class="relative overflow-hidden h-[400px] md:h-[536px]">
  <div id="hero-slides" class="relative h-full">
    {
      slides.map(({ image, text }, index) => (
        <div
          class="absolute inset-0 opacity-0 transition-opacity duration-1000 ease-in-out flex items-center justify-center bg-cover bg-center text-white"
          style={`background-image: url(${image}); z-index: ${index === 0 ? "10" : "0"}; opacity: ${index === 0 ? "1" : "0"};`}
          data-index={index}
        >
          <div class="bg-black bg-opacity-50 p-4 rounded-xl">
            <h3 class="text-[32px] md:text-[56px] font-bold text-center px-4">
              {text}
            </h3>
          </div>
        </div>
      ))
    }
  </div>

  <!-- Controls -->
  <button
    id="prevSlide"
    class="absolute left-4 top-1/2 -translate-y-1/2 bg-black bg-opacity-50 text-white px-3 py-2 rounded-full hover:bg-opacity-80 z-20"
    aria-label="Previous Slide"
  >
    ‹
  </button>
  <button
    id="nextSlide"
    class="absolute right-4 top-1/2 -translate-y-1/2 bg-black bg-opacity-50 text-white px-3 py-2 rounded-full hover:bg-opacity-80 z-20"
    aria-label="Next Slide"
  >
    ›
  </button>
</div>

<script is:inline>
  const slides = Array.from(
    document.querySelectorAll("#hero-slides > [data-index]")
  );
  let currentIndex = 0;
  let interval;

  function showSlide(index) {
    slides.forEach((slide, i) => {
      slide.style.opacity = i === index ? "1" : "0";
      slide.style.zIndex = i === index ? "10" : "0";
    });
    currentIndex = index;
  }

  function goToSlide(index) {
    const newIndex = (index + slides.length) % slides.length;
    showSlide(newIndex);
  }

  function startSlider() {
    interval = setInterval(() => {
      goToSlide(currentIndex + 1);
    }, 5000);
  }

  function stopSlider() {
    clearInterval(interval);
  }

  document.getElementById("prevSlide").addEventListener("click", () => {
    stopSlider();
    goToSlide(currentIndex - 1);
    startSlider();
  });

  document.getElementById("nextSlide").addEventListener("click", () => {
    stopSlider();
    goToSlide(currentIndex + 1);
    startSlider();
  });

  const container = document.querySelector(".relative.overflow-hidden");
  container.addEventListener("mouseenter", stopSlider);
  container.addEventListener("mouseleave", startSlider);

  startSlider();
</script>
