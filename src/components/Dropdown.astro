---
interface Props {
  label: string;
  items: {
    label: string;
    link: string;
  }[];
}

const { items, label } = Astro.props;
---

<div class="group relative inline-block">
  <button
    class="flex items-center gap-1 w-full lg:w-auto lg:px-3 py-2 text-white hover:text-gray-200"
    id={`${label}-dropdown-button`}
    aria-haspopup="true"
    aria-expanded="false"
    tabindex="0"
    type="button"
  >
    <span>{label}</span>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="3"
      stroke="currentColor"
      class="w-3 h-3 transition-transform duration-200 group-hover:rotate-180"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
    </svg>
  </button>
  <ul
    class="absolute top-full left-0 w-64 bg-white shadow-lg rounded-sm transform origin-top transition-all duration-200 ease-in-out scale-y-0 group-hover:scale-y-100 pointer-events-none group-hover:pointer-events-auto"
    role="menu"
    aria-orientation="vertical"
  >
    {
      items.map((item) => (
        <li role="none">
          <a
            href={item.link}
            class="block px-4 py-3 text-gray-800 hover:bg-gray-100 transition-colors duration-200"
            role="menuitem"
          >
            {item.label}
          </a>
        </li>
      ))
    }
  </ul>
</div>
