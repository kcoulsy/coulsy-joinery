---
// Search bar component for site-wide search functionality - Adapted for Coulsy Joinery
---

<div class="relative" id="search-container">
  <div class="relative">
    <input
      type="text"
      placeholder="Search joinery services..."
      class="w-full px-4 py-3 pl-12 pr-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-600 focus:border-transparent bg-white text-gray-900 dark:bg-gray-800 dark:border-gray-600 dark:text-white shadow-sm"
      id="search-input"
      autocomplete="off"
    />
    <div
      class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
    >
      <svg
        class="h-5 w-5 text-gray-400"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
      </svg>
    </div>
    <button
      type="button"
      class="absolute inset-y-0 right-0 pr-3 flex items-center"
      id="clear-search"
      style="display: none;"
    >
      <svg
        class="h-5 w-5 text-gray-400 hover:text-gray-600"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <!-- Search Results Dropdown -->
  <div
    class="absolute z-50 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-lg shadow-lg max-h-96 overflow-y-auto"
    id="search-results"
    style="display: none;"
  >
    <div class="p-4">
      <div id="search-results-content">
        <!-- Results will be populated here -->
      </div>
    </div>
  </div>
</div>

<script>
  class SiteSearch {
    private searchInput: HTMLInputElement | null;
    private searchResults: HTMLElement | null;
    private clearButton: HTMLElement | null;
    private resultsContent: HTMLElement | null;
    private searchTimeout: NodeJS.Timeout | null;
    private isSearching: boolean;
    private searchData: any;

    constructor() {
      this.searchInput = document.getElementById(
        "search-input"
      ) as HTMLInputElement;
      this.searchResults = document.getElementById("search-results");
      this.clearButton = document.getElementById("clear-search");
      this.resultsContent = document.getElementById("search-results-content");
      this.searchTimeout = null;
      this.isSearching = false;
      this.searchData = {};

      this.init();
    }

    init() {
      this.setupEventListeners();
      this.loadSearchData();
    }

    setupEventListeners() {
      this.searchInput?.addEventListener("input", (e) => {
        this.handleSearchInput((e.target as HTMLInputElement).value);
      });

      this.searchInput?.addEventListener("focus", () => {
        if (this.searchInput?.value.trim()) {
          this.showResults();
        }
      });

      this.clearButton?.addEventListener("click", () => {
        this.clearSearch();
      });

      document.addEventListener("click", (e) => {
        if (!(e.target as Element).closest("#search-container")) {
          this.hideResults();
        }
      });

      this.searchInput?.addEventListener("keydown", (e) => {
        if (e.key === "Escape") {
          this.hideResults();
        }
      });
    }

    async loadSearchData() {
      this.searchData = {
        services: [
          {
            title: "Traditional Joinery",
            url: "/joinery-services/traditional-joinery",
            type: "service",
          },
          {
            title: "Garden Offices & Annexes",
            url: "/joinery-services/garden-offices",
            type: "service",
          },
          {
            title: "Small Build Works",
            url: "/joinery-services/small-build-works",
            type: "service",
          },
          {
            title: "Kitchen Installation",
            url: "/joinery-services/kitchen-installers",
            type: "service",
          },
          {
            title: "Door Hanging",
            url: "/joinery-services/door-hanging",
            type: "service",
          },
          {
            title: "Stud Walls & Partitioning",
            url: "/joinery-services/stud-wall-partitioning",
            type: "service",
          },
          {
            title: "Heritage Restoration",
            url: "/joinery-services/heritage-restoration-joinery",
            type: "service",
          },
          {
            title: "Bespoke Joinery",
            url: "/joinery-services/bespoke-joinery",
            type: "service",
          },
        ],
        locations: [
          "York",
          "Leeds",
          "Harrogate",
          "Wetherby",
          "Selby",
          "Tadcaster",
          "Pocklington",
          "Ripon",
          "Thirsk",
          "Masham",
          "Boroughbridge",
          "Easingwold",
          "Helmsley",
          "Pickering",
          "Sherburn-in-Elmet",
          "Knaresborough",
          "Otley",
          "Horsforth",
          "Boston Spa",
          "Linton",
          "Collingham",
          "Scarcroft",
          "Thorner",
          "Shadwell",
          "Moortown",
        ],
      };
    }

    handleSearchInput(query: string) {
      const trimmedQuery = query.trim();

      if (this.clearButton) {
        this.clearButton.style.display = trimmedQuery ? "flex" : "none";
      }

      if (this.searchTimeout) {
        clearTimeout(this.searchTimeout);
      }

      if (trimmedQuery.length < 2) {
        this.hideResults();
        return;
      }

      this.searchTimeout = setTimeout(() => {
        this.performSearch(trimmedQuery);
      }, 300);
    }

    async performSearch(query: string) {
      if (this.isSearching) return;

      this.isSearching = true;
      const results = this.searchLocal(query);
      this.displayResults(results, query);
      this.isSearching = false;
    }

    searchLocal(query: string) {
      const lowerQuery = query.toLowerCase();
      const results: any[] = [];

      // Search services
      this.searchData.services.forEach((service: any) => {
        if (service.title.toLowerCase().includes(lowerQuery)) {
          results.push({
            ...service,
            relevance: this.calculateRelevance(service.title, query),
          });
        }
      });

      // Search locations
      this.searchData.locations.forEach((location: string) => {
        if (location.toLowerCase().includes(lowerQuery)) {
          results.push({
            title: `Joinery Services in ${location}`,
            url: `/joinery-services/${location.toLowerCase().replace(/\s+/g, "-")}-joinery`,
            type: "location",
            relevance: this.calculateRelevance(location, query),
          });
        }
      });

      return results.sort((a, b) => b.relevance - a.relevance).slice(0, 8);
    }

    calculateRelevance(text: string, query: string) {
      const lowerText = text.toLowerCase();
      const lowerQuery = query.toLowerCase();

      if (lowerText === lowerQuery) return 100;
      if (lowerText.startsWith(lowerQuery)) return 90;
      if (lowerText.includes(lowerQuery)) return 70;

      const words = lowerQuery.split(" ");
      const textWords = lowerText.split(" ");
      let wordMatches = 0;

      words.forEach((word) => {
        if (textWords.some((textWord) => textWord.includes(word))) {
          wordMatches++;
        }
      });

      return (wordMatches / words.length) * 50;
    }

    displayResults(results: any[], query: string) {
      if (!this.resultsContent) return;

      if (results.length === 0) {
        this.resultsContent.innerHTML = `
          <div class="text-center py-8">
            <div class="text-gray-400 text-4xl mb-4">üî®</div>
            <p class="text-gray-600 dark:text-gray-300">No results found for "${query}"</p>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Try searching for "joinery" or a location like "York"</p>
          </div>
        `;
      } else {
        const resultsHtml = results
          .map(
            (result: any) => `
            <a href="${result.url}" class="block p-3 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg transition-colors duration-200">
              <div class="flex items-center">
                <div class="flex-shrink-0 mr-3">
                  <div class="w-8 h-8 bg-brand-100 dark:bg-brand-900 rounded-lg flex items-center justify-center">
                    ${result.type === "service" ? "üî®" : "üìç"}
                  </div>
                </div>
                <div class="flex-1">
                  <div class="font-medium text-gray-900 dark:text-white">${result.title}</div>
                  <div class="text-sm text-gray-500 dark:text-gray-400 capitalize">${result.type}</div>
                </div>
                <div class="flex-shrink-0">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </div>
              </div>
            </a>
          `
          )
          .join("");

        this.resultsContent.innerHTML = resultsHtml;
      }

      this.showResults();
    }

    showResults() {
      if (this.searchResults) {
        this.searchResults.style.display = "block";
      }
    }

    hideResults() {
      if (this.searchResults) {
        this.searchResults.style.display = "none";
      }
    }

    clearSearch() {
      if (this.searchInput) {
        this.searchInput.value = "";
        this.hideResults();
        if (this.clearButton) {
          this.clearButton.style.display = "none";
        }
        this.searchInput.focus();
      }
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    new SiteSearch();
  });
</script>

<style>
  #search-input {
    color: #111827 !important;
    background-color: #ffffff !important;
  }

  .dark #search-input {
    color: #f9fafb !important;
    background-color: #1f2937 !important;
  }

  #search-input::placeholder {
    color: #6b7280 !important;
  }

  .dark #search-input::placeholder {
    color: #9ca3af !important;
  }
</style>
